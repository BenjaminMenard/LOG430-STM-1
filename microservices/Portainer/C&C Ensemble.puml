@startuml

node "Portainer" {
    component UI as ui
    component Ingress as ingress
    component AuthService as auth
    Database InfluxDB as influx
    Database Postgres as sql
    component Adminer as admin
    queue RabbitMQ as portainerMq
}

node "Docker Desktop"{
    component NodeController as nodeC
    component TripComparator as tc
    component RouteTimeProvider as rtp
    component Stm
    queue RabbitMQ as mq {
        card "coordinate_message(exchange)" as queryEx
        card "bus_position_updated(exchange)" as resEx
        queue query as qq
        queue response as rq
        queryEx --> qq
        rq <-- resEx
    }
}

ui -(0-> ingress : Get/Post
ingress -(0-> auth : Get/Post
admin --> sql
ingress --->  influx : Read
ingress ...> portainerMq : AMQP protocol
portainerMq ..> nodeC : AMQP protocol
ingress <---0)--- nodeC : Get/Post
influx <--- nodeC : Write
auth -->  sql : Read/Write
nodeC ..> queryEx : AMQP protocol
nodeC <.. rq : AMQP protocol
qq ..> tc : AMQP protocol
resEx <.. tc : AMQP protocol
tc -(0-> rtp : Get
tc -(0-> Stm : Get/Post

@enduml