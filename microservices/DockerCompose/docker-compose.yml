version: '3.8'
x-conf:
  - env:
      - 'http://+:80'
      - EventStream
  - vol:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
x-variables:
  SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
  NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
  ASPNETCORE_URLS: 'http://+:80'
services:
  nodecontroller:
    image: nodecontroller
    container_name: NodeController
    restart: always
    ports:
      - '${NODE_CONTROLLER_PORT}:80'
    build:
      context: ../
      dockerfile: NodeController/NodeController/Dockerfile
    environment:
      TEAM_NAME: '${TEAM_NAME}'
      USERNAME: '${USER}'
      GROUP: '${GROUP}'
      SECRET: '${SECRET}'
      INGRESS_ADDRESS: '${INGRESS_ADDRESS}'
      INGRESS_PORT: '${INGRESS_PORT}'
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      MQ_SERVICE_NAME: EventStream
      CUSTOM_CONTAINER_PORTS_DISCOVERY: 5672
      BRIDGE_PORT: 32674
        
  event-store:
    container_name: EventStream
    image: 'rabbitmq:3.12-rc-management'
    ports:
      - '32771:5672'
      - '15672:15672'
    environment:
      ID: EventStream
    labels:
      ARTIFACT_CATEGORY: Connector
      ARTIFACT_NAME: EventStream
      MINIMUM_NUMBER_OF_INSTANCES: 1

  routetimeprovider:
    container_name: RouteTimeProvider
    image: routetimeprovider
    restart: always
    build:
      context: ../
      dockerfile: RouteTimeProvider/RouteTimeProvider/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: RouteTimeProvider
      API_KEY: '${TOMTOM}'
    ports:
      - '32772:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: RouteTimeProvider
    depends_on:
      - nodecontroller
  tripcomparator:
    container_name: TripComparator
    image: tripcomparator
    restart: always
    build:
      context: ../
      dockerfile: TripComparator/Controllers/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: TripComparator
      MQ_SERVICE_NAME: EventStream
    ports:
      - '32773:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      ARTIFACT_CATEGORY: Computation
      MINIMUM_NUMBER_OF_INSTANCES: 1
      ARTIFACT_NAME: TripComparator
    depends_on:
      - nodecontroller
  stm:
    container_name: STM
    image: stm
    restart: always
    build:
      context: ../
      dockerfile: STM/STM/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: STM
      API_KEY: '${STM}'
    ports:
      - '32774:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: STM
    depends_on:
      - nodecontroller
    
