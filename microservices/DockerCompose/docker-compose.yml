version: '3.8'
 
x-conf: 
  - env: 
    - &ASPNETCORE_URLS http://+:80
    - &MQ_SERVICE_NAME EventStream
  - vol:
     &vol
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

x-variables: &std
  SERVICES_ADDRESS: ${SERVICES_ADDRESS}   
  NODE_CONTROLLER_PORT: ${NODE_CONTROLLER_PORT}
  ASPNETCORE_URLS: *ASPNETCORE_URLS

services:

#Section Admin: Cette section est seulement pour la première itération et doit être effacé
# pour les itérations subséquentes

  ingress:
    image: ${DOCKER_REGISTRY-}ingress
    restart: always
    ports:
      - ${INGRESS_PORT}
    build:
      context: ../
      dockerfile: Ingress/Ingress/Dockerfile
    environment:
      ASPNETCORE_URLS: *ASPNETCORE_URLS
    volumes:
      *vol
    labels:
      COMPONENT_CATEGORY: DEBUG      
  
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=my_cassandra_cluster
    ports:
      - "32670:80"
    labels:
      COMPONENT_CATEGORY: DEBUG
    volumes:
      - cassandra-data:/var/lib/cassandra

  cassandra-web:
    image: valeriansaliou/cassandra-web:2
    container_name: cassandra-web
    environment:
      - CASSANDRAWEB_USERNAME=admin
      - CASSANDRAWEB_PASSWORD=admin
      - CASSANDRAWEB_CONTACT_POINTS=cassandra
      - CASSANDRAWEB_PORT=32670
      - CASSANDRAWEB_AUTH_USERNAME=
      - CASSANDRAWEB_AUTH_PASSWORD=
    ports:
      - "32671:80"
    depends_on:
      - cassandra
    labels:
      COMPONENT_CATEGORY: DEBUG

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "32672:80"
    labels:
      COMPONENT_CATEGORY: DEBUG

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "32673:80"
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    labels:
      COMPONENT_CATEGORY: DEBUG

#Fin Section Admin

  nodecontroller:
    image: ${DOCKER_REGISTRY-}nodecontroller
    restart: always
    ports:
      - ${NODE_CONTROLLER_PORT}
    build:
      context: ../
      dockerfile: NodeController/NodeController/Dockerfile
    environment:
      TEAM_NAME: ${TEAM_NAME}
      INGRESS_ADDRESS: ${INGRESS_ADDRESS}
      INGRESS_PORT: ${INGRESS_PORT}
      SERVICES_ADDRESS: ${SERVICES_ADDRESS}     
      NODE_CONTROLLER_PORT: ${NODE_CONTROLLER_PORT}
      ASPNETCORE_URLS: *ASPNETCORE_URLS
      MQ_SERVICE_NAME: *MQ_SERVICE_NAME
    volumes:
      *vol    
    depends_on:
      - ingress
    
  event-store:
    container_name: *MQ_SERVICE_NAME
    image: rabbitmq
    restart: always
    ports:
        - "32771:80"
    environment:
      ID: *MQ_SERVICE_NAME 
    labels:
      COMPONENT_CATEGORY: Connector

  routetimeprovider:
    container_name: &name RouteTimeProvider
    image: ${DOCKER_REGISTRY-}routetimeprovider
    restart: always
    build:
      context: ../
      dockerfile: RouteTimeProvider/RouteTimeProvider/Dockerfile
    environment:
      <<: *std
      ID: *name 
      API_KEY: ${TOMTOM}
    ports:
        - "32772:80"
    volumes:
      *vol
    labels:
      COMPONENT_CATEGORY: Computation
    depends_on:
      - nodecontroller

  tripcomparator:
    container_name: &name TripComparator
    image: ${DOCKER_REGISTRY-}tripcomparator
    restart: always
    build:
      context: ../
      dockerfile: TripComparator/TripComparator/Dockerfile
    environment:
      <<: *std
      ID: *name 
    ports:
        - "32773:80"
    volumes:
      *vol
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      COMPONENT_CATEGORY: Computation
      MINIMUM_NUMBER_OF_INSTANCES: 2
    depends_on:
      - nodecontroller

  stm:
    container_name: &name STM
    image: ${DOCKER_REGISTRY-}stm
    restart: always
    build:
        context: ../
        dockerfile: STM/STM/Dockerfile
    environment:
      <<: *std
      ID: *name 
      API_KEY: ${STM}
    ports:
        - "32774:80"
    volumes:
        *vol
    labels:
      COMPONENT_CATEGORY: Computation
    depends_on:
        - nodecontroller


