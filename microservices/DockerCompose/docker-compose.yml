version: '3.8'
 
x-conf: 
  - env: 
    - &ASPNETCORE_URLS http://+:80
    - &MQ_SERVICE_NAME EventStream
  - vol:
     &vol
     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

x-variables: &std
  SERVICES_ADDRESS: ${SERVICES_ADDRESS}   
  NODE_CONTROLLER_PORT: ${NODE_CONTROLLER_PORT}
  ASPNETCORE_URLS: *ASPNETCORE_URLS

services:

#Section Admin: Cette section est seulement pour la première itération et doit être effacé
# pour les itérations subséquentes

  ingress:
    image: ${DOCKER_REGISTRY-}ingress
    container_name: &name ingress
    restart: always
    ports:
      - ${INGRESS_PORT}:80
    build:
      context: ../
      dockerfile: Ingress/Ingress/Dockerfile
    environment:
      ASPNETCORE_URLS: *ASPNETCORE_URLS
      NODE_STATE_STORAGE_Port: 32670
      EXPERIMENT_HISTORY_STORAGE_Port: 32672
    volumes:
      *vol
    labels:
      ARTIFACT_CATEGORY: DEBUG  
      ARTIFACT_NAME: *name    
  
  node-state-time-serie-storage:
    image: cassandra:latest
    container_name: &name NodeStateTimeSerieStorage
    environment:
      - CASSANDRA_CLUSTER_NAME=my_cassandra_cluster
    ports:
      - "32670:9042"
    labels:
      ARTIFACT_CATEGORY: Database
      ARTIFACT_NAME: *name
    #volumes:
    #  - cassandra-data:/var/lib/cassandra

  experiment-history-storage:
    image: mongo:latest
    container_name: &name ExperimentHistoryStorage
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "32672:27017"
    labels:
      ARTIFACT_CATEGORY: Database
      ARTIFACT_NAME: *name

#Fin Section Admin

  nodecontroller:
    image: ${DOCKER_REGISTRY-}nodecontroller
    container_name: NodeController
    restart: always
    ports:
      - ${NODE_CONTROLLER_PORT}:80
    build:
      context: ../
      dockerfile: NodeController/NodeController/Dockerfile
    environment:
      TEAM_NAME: ${TEAM_NAME}
      INGRESS_ADDRESS: ${INGRESS_ADDRESS}
      INGRESS_PORT: ${INGRESS_PORT}
      SERVICES_ADDRESS: ${SERVICES_ADDRESS}     
      NODE_CONTROLLER_PORT: ${NODE_CONTROLLER_PORT}
      ASPNETCORE_URLS: *ASPNETCORE_URLS
      MQ_SERVICE_NAME: *MQ_SERVICE_NAME
      #list here all the custom container ports you are using in your services for communication
      #added are the default ports for rabbitmq, cassandra and mongodb
      #feel free to add the necessary ones for your needs
      CUSTOM_CONTAINER_PORTS_DISCOVERY: 5672,27017,9042
    volumes:
      *vol    
    depends_on:
      - ingress
    
  event-store:
    container_name: *MQ_SERVICE_NAME
    image: rabbitmq:3.12-rc-management
    restart: always
    ports:
        - "32771:5672"
        - "15672:15672"
    environment:
      ID: *MQ_SERVICE_NAME 
      #default username and password are both: guest
    labels:
      ARTIFACT_CATEGORY: Connector
      ARTIFACT_NAME: *MQ_SERVICE_NAME


  routetimeprovider:
    container_name: &name RouteTimeProvider
    image: ${DOCKER_REGISTRY-}routetimeprovider
    restart: always
    build:
      context: ../
      dockerfile: RouteTimeProvider/RouteTimeProvider/Dockerfile
    environment:
      <<: *std
      ID: *name 
      API_KEY: ${TOMTOM}
    ports:
        - "32772:80"
    volumes:
      *vol
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: *name
      MINIMUM_NUMBER_OF_INSTANCES: 5
    depends_on:
      - nodecontroller

  tripcomparator:
    container_name: &name TripComparator
    image: ${DOCKER_REGISTRY-}tripcomparator
    restart: always
    build:
      context: ../
      dockerfile: TripComparator/TripComparator/Dockerfile
    environment:
      <<: *std
      ID: *name 
      MQ_SERVICE_NAME: *MQ_SERVICE_NAME
    ports:
        - "32773:80"
    volumes:
      *vol
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      ARTIFACT_CATEGORY: Computation
      MINIMUM_NUMBER_OF_INSTANCES: 1
      ARTIFACT_NAME: *name
    depends_on:
      - nodecontroller

  stm:
    container_name: &name STM
    image: ${DOCKER_REGISTRY-}stm
    restart: always
    build:
        context: ../
        dockerfile: STM/STM/Dockerfile
    environment:
      <<: *std
      ID: *name 
      API_KEY: ${STM}
    ports:
        - "32774:80"
    volumes:
        *vol
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: *name
    depends_on:
        - nodecontroller


