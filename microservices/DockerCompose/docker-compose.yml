version: '3.8'
x-conf:
  - env:
      - 'http://+:80'
      - EventStream
  - vol:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
x-variables:
  SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
  NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
  ASPNETCORE_URLS: 'http://+:80'
services:
  ingress:
    image: ingress
    container_name: Ingress
    restart: always
    ports:
      - '${INGRESS_PORT}:80'
    build:
      context: ../
      dockerfile: Ingress/Ingress/Dockerfile
    environment:
      ASPNETCORE_URLS: 'http://+:80'
      NODE_STATE_STORAGE_PORT: 32670
      AUTH_SERVICE_PORT: 32671
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      BRIDGE_PORT: 32674
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    depends_on:
      - bridge

  node-state-time-serie-storage:
    image: 'influxdb:latest'
    container_name: NodeStateTimeSerieStorage
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=guest
      - DOCKER_INFLUXDB_INIT_PASSWORD=guest-pass
      - DOCKER_INFLUXDB_INIT_ORG=ets
      - 'DOCKER_INFLUXDB_INIT_BUCKET=${TEAM_NAME}'
      - INFLUXD_LOG_LEVEL=debug
    ports:
      - '32670:8086'
    labels:
      ARTIFACT_CATEGORY: Database
      ARTIFACT_NAME: NodeStateTimeSerieStorage
    volumes:
      - 'influxdb-data:/var/lib/influxdb2'
      - 'influxdb-config:/etc/influxdb2'
  authservice:
    image: authservice
    container_name: AuthService
    restart: always
    ports:
      - '32671:80'
    build:
      context: ../
      dockerfile: AuthService/AuthService/Dockerfile
    environment:
      ASPNETCORE_URLS: 'http://+:80'
      POSTGRES_PORT: 32672
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
    x-develop:
      watch:
        - action: build
          path: AuthService/
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'

  userdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: secret
    ports:
      - '32672:5432'

  adminer:
    image: adminer
    restart: always
    ports:
      - '32673:8080'
    
  bridge:
    container_name: BridgePortainerLocal
    image: 'rabbitmq:3.12-rc-management'
    restart: always
    ports:
      - '32674:5672'
      - '32675:15672'

  grafana:
    image: grafana/grafana
    ports:
      - 32676:3000
    user: '104'
    
  nodecontroller:
    image: nodecontroller
    container_name: NodeController
    restart: always
    ports:
      - '${NODE_CONTROLLER_PORT}:80'
    build:
      context: ../
      dockerfile: NodeController/NodeController/Dockerfile
    environment:
      TEAM_NAME: '${TEAM_NAME}'
      USERNAME: '${USER}'
      SECRET: '${SECRET}'
      INGRESS_ADDRESS: '${INGRESS_ADDRESS}'
      INGRESS_PORT: '${INGRESS_PORT}'
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      MQ_SERVICE_NAME: EventStream
      CUSTOM_CONTAINER_PORTS_DISCOVERY: 5672
      BRIDGE_PORT: 32674
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
  
  event-store:
    container_name: EventStream
    image: 'rabbitmq:3.12-rc-management'
    ports:
      - '32771:5672'
      - '15672:15672'
    environment:
      ID: EventStream
    labels:
      ARTIFACT_CATEGORY: Connector
      ARTIFACT_NAME: EventStream
      MINIMUM_NUMBER_OF_INSTANCES: 1

  routetimeprovider:
    container_name: RouteTimeProvider
    image: routetimeprovider
    restart: always
    build:
      context: ../
      dockerfile: RouteTimeProvider/RouteTimeProvider/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: RouteTimeProvider
      API_KEY: '${TOMTOM}'
    ports:
      - '32772:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: RouteTimeProvider
    depends_on:
      - nodecontroller
  tripcomparator:
    container_name: TripComparator
    image: tripcomparator
    restart: always
    build:
      context: ../
      dockerfile: TripComparator/Controllers/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: TripComparator
      MQ_SERVICE_NAME: EventStream
    ports:
      - '32773:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      ARTIFACT_CATEGORY: Computation
      MINIMUM_NUMBER_OF_INSTANCES: 1
      ARTIFACT_NAME: TripComparator
    depends_on:
      - nodecontroller
  stm:
    container_name: STM
    image: stm
    restart: always
    build:
      context: ../
      dockerfile: STM/STM/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ASPNETCORE_URLS: 'http://+:80'
      ID: STM
      API_KEY: '${STM}'
    ports:
      - '32774:80'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'
    labels:
      ARTIFACT_CATEGORY: Computation
      ARTIFACT_NAME: STM
    depends_on:
      - nodecontroller
  
volumes:
  influxdb-data: null
  influxdb-config: null
