<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServiceMeshHelper</name>
    </assembly>
    <members>
        <member name="M:ServiceMeshHelper.Controllers.RestController.Get(ServiceMeshHelper.Bo.InterServiceRequests.GetRoutingRequest)">
            <summary>
            Create a GET request to the target service by it's name (ID in docker-compose).
            </summary>
            <param name="routingRequest"></param>
            <returns>RestResponse(s) in an async manner as they become available</returns>
        </member>
        <member name="M:ServiceMeshHelper.Controllers.RestController.Post``1(ServiceMeshHelper.Bo.InterServiceRequests.PostRoutingRequest{``0})">
            <summary>
            Creates a POST request to the target service by it's name (ID in docker-compose).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="routingRequest"></param>
            <returns>RestResponse(s) in an async manner as they become available</returns>
        </member>
        <member name="M:ServiceMeshHelper.Controllers.RestController.GetAddress(System.String,ServiceMeshHelper.LoadBalancingMode)">
            <summary>
            Get the address of a service based on it's name (ID in docker-compose) and the load balancing mode.
            </summary>
            <param name="targetService"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:ServiceMeshHelper.Controllers.TcpController.GetTcpSocketForRabbitMq(System.String)">
            <summary>
            Allows managed connection over tcp to a service in the mesh using an integrated reverse proxy which is failover capable
            </summary>
            <param name="targetService">Name of the service type to connect to, ex: EventStream</param>
            <returns></returns>
        </member>
        <member name="M:ServiceMeshHelper.Controllers.TcpController.GetTcpSocket(System.String,System.String)">
            <summary>
            Allows managed connection over tcp to a service in the mesh using an integrated reverse proxy which is failover capable
            </summary>
            <param name="protocol">Name of the communication protocol, ex: rabbitmq or redis or jdbc:postgresql</param>
            <param name="targetService">Name of the service type to connect to, ex: EventStream</param>
            <returns></returns>
        </member>
        <member name="T:ServiceMeshHelper.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.Authorization">
            <summary>
              Looks up a localized string similar to 9c934c68-b9ea-413c-badb-77c66c7383cf.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.HeartBeat_Endpoint">
            <summary>
              Looks up a localized string similar to HeartBeat.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.RouteByServiceType_Endpoint">
            <summary>
              Looks up a localized string similar to RouteByServiceType.
            </summary>
        </member>
        <member name="P:ServiceMeshHelper.Properties.Resources.SubscribeToIngress_Endpoint">
            <summary>
              Looks up a localized string similar to Subscribe.
            </summary>
        </member>
    </members>
</doc>
